tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://baltig.infn.it/infn-cloud/tosca-types/raw/master/custom_types.yaml

description: >
  Deploy a virtual machine pre-configured with the Elasticsearch search and analytics engine and with Kibana for simple visualization of data with charts and graphs in Elasticsearch

metadata:
  display_name: Elasticsearch and Kibana
  icon: https://2.bp.blogspot.com/-TfNbI0vJD-U/W7hpt3-HG0I/AAAAAAAAfn8/BZA5n7hNPlIGY5BM6igPIJvuzNkOk8Q3QCLcBGAs/s640/image-3.jpg
  allowed_groups: "beta-testers,developers,orchestrator-admin"

topology_template:

  inputs:
    num_cpus:
      type: integer
      description: Number of virtual cpus for the VM
      default: 2
      constraints:
      - valid_values: [ 2, 4 ]
    mem_size:
      type: scalar-unit.size
      description: Amount of memory for the VM
      default: 4 GB
      constraints:
      - valid_values: [ 4 GB, 8 GB ]

    version:
      type: string
      default: 7.10.2
      constraints:
      - valid_values:
        - 7.10.2
        - 7.9.3
        - 7.8.1
        - 7.7.1
        - 7.6.2
        - 7.5.2
        - 7.4.2
        - 7.3.2
        - 7.1.1
        - 6.8.13
      description: Elasticsearch version

    es_password:
      type: string
      required: true
      description: Password for user elastic

    kibana_password:
      type: string
      required: true
      description: Password for kibana system user

    ports:
      description:
      type: map
      required: false
      default: { "kibana": { "protocol": "tcp", "source": 5601 } }
      constraints:
        - min_length: 0
      entry_schema:
        type: tosca.datatypes.network.PortSpec
      description: Ports to open on the VM

    users:
      type: list
      description: list of users to create on the VM
      entry_schema:
        type: tosca.datatypes.indigo.User
      default: []
      required: false      

  node_templates:

    pub_network:
      type: tosca.nodes.network.Network
      properties:
        network_type: public

    server_pub_port:
      type: tosca.nodes.network.Port
      properties:
        order: 1
      requirements:
        - binding: kibana_es_server
        - link: pub_network

    priv_network:
      type: tosca.nodes.network.Network
      properties:
        network_type: private

    server_priv_port:
      type: tosca.nodes.network.Port
      properties:
        order: 0
      requirements:
        - binding: kibana_es_server
        - link: priv_network

    elasticsearch:
      type: tosca.nodes.indigo.Elasticsearch
      properties:
        es_version:  { get_input: version }
        bind_address: "0.0.0.0"
        elastic_password: { get_input: es_password }
        kibana_system_password: { get_input: kibana_password }
      requirements:
        - host: kibana_es_server

    kibana:
      type: tosca.nodes.indigo.Kibana
      properties:
        kibana_version:  { get_input: version }
        elasticsearch_password: { get_input: kibana_password }
      requirements:
        - host: kibana_es_server
        - dependency: elasticsearch

    kibana_es_server:
      type: tosca.nodes.indigo.Compute
      properties:
        os_users: { get_input: users }
      capabilities:
        endpoint:
          properties:
            ports: { get_input: ports }
        host:
          properties:
            num_cpus: { get_input: num_cpus }
            mem_size: { get_input: mem_size }
        os:
          properties:
            distribution: ubuntu
            type: linux
            version: 18.04

  outputs:
    kibana_endpoint:
      value: { concat: [ 'http://', get_attribute: [ kibana_es_server, public_address, 0 ], ':5601' ] }
    kibana_username:
      value: elastic
    node_ip:
      value: { get_attribute: [ kibana_es_server, public_address, 0 ] }
    node_creds:
      value: { get_attribute: [ kibana_es_server, endpoint, credential, 0 ] }
    os_users:
      value: { get_property: [ kibana_es_server, os_users, 0 ] }      
