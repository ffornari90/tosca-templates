tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://paas.cloud.infn.it/public/tosca/custom_types.yaml

description: >
  Launch a virtual compute node with block device attached and encrypted and get
  as an output the IP and SSH credentials to access

metadata:
  display_name: Virtual machine with encrypted volume
  icon: https://paas.cloud.infn.it/public/images/vm_with_blockdevice_encrypted.png
  allowed_groups: "developers,orchestrator-admin"

topology_template:
  inputs:
    num_cpus:
      type: integer
      description: Number of virtual cpus for the VM
      default: 1

    mem_size:
      type: scalar-unit.size
      description: Amount of memory for the VM
      default: 2 GB

    volume_size:
      type: scalar-unit.size
      description: Size of the volume to be attached
      default: 10 GB

    mountpoint:
      type: string
      default: /data
      description: Path to mount the volume

    filesystem:
      type: string
      default: ext4
      description: set filesystem type

    cipher:
      type: string
      default: 'aes-xts-plain64'
      description:  set cipher algorithm

    keysize:
      type: integer
      default: 256
      description: set key size 

    hash_algorithm:
      type: string
      default: 'sha256'
      description: set hash algorithm used for key derivation

    encryption_password:
      type: string
      required: yes
      description: Passphrase for encryption

    os_distribution:
      type: string
      default: ubuntu
      description: Operating System distro - valid values ubuntu, centos

    os_version:
      type: version
      default: 16.04
      description: Operating System distribution version

  node_templates:

    luks_encryption:
      type: tosca.nodes.indigo.FSEncrypt
      properties:
        passphrase: { get_input: encryption_password }
        mountpoint: { get_input: mountpoint }
        cipher: { get_input: cipher }
        keysize: { get_input: keysize }
        hash_algorithm: { get_input: hash_algorithm }
        filesystem: { get_input: filesystem }
      requirements:
        - host: simple_node

    simple_node:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            network_name: PUBLIC
            ports:
              ssh_port:
                protocol: tcp
                source: 22
        scalable:
          properties:
            count: 1
        host:
          properties:
            num_cpus: { get_input: num_cpus }
            mem_size: { get_input: mem_size }
        os:
          properties:
            type: linux
            distribution: { get_input: os_distribution }
            version: { get_input: os_version }
      requirements:
        # contextually this can only be a relationship type
        - local_storage:
            # capability is provided by Compute Node Type
            node: block_device
            capability: tosca.capabilities.Attachment
            relationship:
              type: tosca.relationships.AttachesTo
              properties:
                #location: { get_input: mountpoint }
                device: vdb

    block_device:
      type: tosca.nodes.BlockStorage
      properties:
        size: { get_input: volume_size }

  outputs:
    label:
      value: "VM with encrypted volume"
    node_ip:
      value: { get_attribute: [ simple_node, public_address, 0 ] }
    node_creds:
      value: { get_attribute: [ simple_node, endpoint, credential, 0 ] }
